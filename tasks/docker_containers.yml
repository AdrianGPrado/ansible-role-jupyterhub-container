---

- name: remove all running containers
  docker:
    name: '{{ item.name }}'
    image: '{{ item.image }}'
    state: absent
  with_items: '{{ docker_container_list }}'

- name: launch docker swarm
  docker:
    name: '{{ docker_swarm_cont_name }}'
    image: '{{ docker_swarm_img_name }}'
    state: reloaded
    restart_policy: always
    command: manage --strategy={{ docker_swarm_strategy }} \
                    file:///root/.swarm/cluster
                    # --tlsverify \
                    # --tlscacert={{ docker_tls_path }}/ca.pem \
                    # --tlscert={{ docker_tls_path }}/cert.pem \
                    # --tlskey={{ docker_tls_path }}/key.pem
    volumes:
      - /root/.swarm:/root/.swarm
      - "{{ docker_tls_path }}:{{ docker_tls_path }}"
    ports:
      - "127.0.0.1:2375:2375"

- name: launch postgres container
  docker:
    name: '{{ docker_postgres_cont_name }}'
    image: '{{ docker_postgres_img_name }}'
    state: reloaded
    restart_policy: always
    env:
      POSTGRES_DB: jupyterhub
      POSTGRES_PASSWORD: "{{ jpy_postgres_password }}"
      PGDATA: '{{ postgres_docker_container_PGATA }}'
    volumes:
      - '{{ postgres_docker_host_vol }}:{{ postgres_docker_container_PGATA }}'

- name: launch jupyterhub container
  docker:
    name: '{{ docker_jhub_cont_name }}'
    image: '{{ docker_jhub_img_name }}:{{ docker_jhub_img_custom_tag }}'
    state: reloaded
    restart_policy: always
    env:
      JPY_COOKIE_SECRET: "{{ cookie_secret }}"
      JPY_DB_USER: postgres
      JPY_DB_PASSWORD: "{{ jpy_postgres_password }}"
      JPY_DB_NAME: jupyterhub
      CONFIGPROXY_AUTH_TOKEN: "{{ configproxy_auth_token }}"
      # DOCKER_TLS_CERT: "{{ docker_tls_path }}/cert.pem"
      # DOCKER_TLS_KEY: "{{ docker_tls_path }}/key.pem"
      HUB_IP: "{{ ansible_ssh_host }}"
    volumes:
      - '{{ jhub_users_docker_cont_vol }}:{{ jhub_users_docker_host_vol }}'
      # - "{{ docker_tls_path }}:{{ docker_tls_path }}"
      # - /var/run/restuser.sock:/restuser.sock
    ports:
      - "{{ ansible_ssh_host }}:8000:8000"
      - "{{ ansible_ssh_host }}:8081:8081"
    links:
      - jpydb:postgres

- name: launch cull container
  docker:
    name: '{{ docker_cull_cont_name }}'
    image: '{{ docker_cull_img_name }}:{{ docker_cull_img_custom_tag }}'
    state: reloaded
    restart_policy: always
    command: --timeout=86400 \
             --cull_every=3600 \
             --url=http://jupyterhub:8081/hub
    env:
      JPY_API_TOKEN:
    links:
      - jupyterhub

- name: launch stats container
  docker:
    name: '{{ docker_stats_cont_name }}'
    image: '{{ docker_stats_img_name }}:{{ docker_stats_img_custom_tag }}'
    state: reloaded
    restart_policy: always
    command: --file=/srv/stats_db/activity.sqlite i\
             --hub=http://jupyterhub:8081
    env:
      JPY_API_TOKEN:
    volumes:
      - /srv/stats_db:/srv/stats_db
    links:
      - jupyterhub
